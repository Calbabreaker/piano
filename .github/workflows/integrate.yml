name: Building, Testing and Deployment

on: [push, pull_request]

jobs:
    build-test:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./backend
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Install stable toolchain
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
            - name: Install pnpm
              run: npm install -g pnpm
            - name: Build frontend
              working-directory: ./frontend
              run: pnpm install && echo "VITE_BACKEND_HOST=http://localhost:3000" > ./.env && pnpm build
            - name: Build backend
              working-directory: ./backend
              run: cargo build -r
            - name: Test run backend
              working-directory: ./backend
              run: cargo run -r & sleep 5; kill $!

    deploy:
        needs: build-test
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository_owner == 'Calbabreaker'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Install stable toolchain
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
            - name: Install pnpm
              run: npm install -g pnpm
            - name: Build frontend with actual server env
              working-directory: ./frontend
              run: pnpm install && echo "VITE_BACKEND_HOST=https://piano-backend.onrender.com" > ./.env && pnpm build
            - name: Push deploy-frontend
              uses: s0/git-publish-subdir-action@develop
              env:
                  REPO: self
                  BRANCH: deploy-frontend
                  FOLDER: frontend/dist
                  MESSAGE: "Deploy at {sha}"
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
